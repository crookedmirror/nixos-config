# show status bar only if there's more than 1 window
set-hook -g after-new-window 'if "[ #{session_windows} -gt 1 ]" "set status on"'
set-hook -g after-kill-pane 'if "[ #{session_windows} -lt 2 ]" "set status off"'
set-hook -g pane-exited 'if "[ #{session_windows} -lt 2 ]" "set status off"'
set-hook -g window-layout-changed 'if "[ #{session_windows} -lt 2 ]" "set status off"'

# https://github.com/orgs/tmux/discussions/3827
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm' 
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m' 

set -g xterm-keys on
setw -g extended-keys on
set -s focus-events on # http://superuser.com/a/252717/65504
set -s escape-time 0

run-shell ~/.config/tmux/plugins/sensible/sensible.tmux

# True color settings
set -g default-terminal "$TERM"
set -ag terminal-overrides ",$TERM:Tc"

set -g mouse off
setw -g clock-mode-style 24

setw -g mode-keys vi
set -g prefix C-S-b


# Fix home/end keys in vim
# source https://stackoverflow.com/questions/18600188/home-end-keys-do-not-work-in-tmux#answer-55616731
bind-key -n Home send Escape "OH"
bind-key -n End send Escape "OF"

# reload config
bind -n C-S-f5 source-file ~/.config/tmux/tmux.conf

# Horizontal layout per default, vertical on all new windows
set -g main-pane-width "50%"
set -g main-pane-height "50%"
set-hook -g -a after-new-window "select-layout main-vertical"

pane_is_vim_like="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"

# sync keypresses in all panes in a window
bind-key -T prefix y set-window-option synchronize-panes on
bind-key -T prefix Y set-window-option synchronize-panes off

# Scrolling (Ctrl+D and Ctrl+U are not fixed)
bind -n C-S-PPage if-shell "$pane_is_vim_like" "send-keys PPage" "copy-mode \; send-keys -X page-up"
bind -n C-S-NPage if-shell "$pane_is_vim_like" "send-keys NPage" "copy-mode \; send-keys -X page-down"

# Not working on Ubuntu lol https://gitlab.gnome.org/GNOME/gtk/-/issues/5865
#bind -n C-S-u if-shell "$pane_is_vim_like" "send-keys C-u" "copy-mode \; send-keys -X page-up"
#bind -n C-S-d if-shell "$pane_is_vim_like" "send-keys C-d" "copy-mode \; send-keys -X page-down"
bind -n C-S-Home if-shell "$pane_is_vim_like" "send-keys C-Home" "copy-mode \; send-keys -X history-top"
bind -n C-S-End if-shell "$pane_is_vim_like" "send-keys C-End" "copy-mode \; send-keys -X history-bottom"

# Panes
bind-key -n C-Left select-pane -L
bind-key -n C-Down select-pane -D
bind-key -n C-Up select-pane -U
bind-key -n C-Right select-pane -R

bind-key -T copy-mode-vi 'C-Left' select-pane -L
bind-key -T copy-mode-vi 'C-Down' select-pane -D
bind-key -T copy-mode-vi 'C-Up' select-pane -U
bind-key -T copy-mode-vi 'C-Right' select-pane -R

bind-key -n C-S-Left resize-pane -L 4
bind-key -n C-S-Down resize-pane -D 4
bind-key -n C-S-Up resize-pane -U 4
bind-key -n C-S-Right resize-pane -R 4

#bind-key -n C-S-Left swap-pane -d -t "{left-of}"
#bind-key -n C-S-Down swap-pane -d -t "{down-of}"
#bind-key -n C-S-Up swap-pane -d -t "{up-of}"
#bind-key -n C-S-Right swap-pane -d -t "{right-of}"

bind -n C-n select-pane -Z -t "{next}"
bind -n C-p select-pane -Z -t "{previous}"
bind -n C-S-n swap-pane -d -t "{next}"
bind -n C-S-p swap-pane -d -t "{previous}"

bind -n C-Enter swap-pane -d -t "{top-left}"
bind -n C-S-Enter split-window -v -c "#{pane_current_path}" \; select-layout
bind -n C-M-Enter break-pane -a
bind -n C-S-w kill-pane \; select-layout
bind -T prefix p display-popup -w 90% -h 90% -E "tmux list-panes -F '#{pane_id} #{session_name}:#{window_index}  #{pane_current_command}  #{pane_current_path}' | fzf --preview 'tmux capture-pane -p -e -t {1}' --preview-window=bottom,50%,nowrap,border-top | cut -d' ' -f1 | xargs -I {} tmux select-pane -t {}"

# Window navigation
set -g base-index 1
set -g pane-base-index 1
set -g renumber-windows on

bind -n M-1 select-window -t 3
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 1
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9

bind -n C-S-q if-shell '[ "$(tmux display-message -p "#{window_panes}")" -gt 1 ]' 'confirm-before kill-window' 'kill-window'
bind -n C-, select-window -p
bind -n C-. select-window -n
bind -n C-S-< swap-window -d -t "{previous}"
bind -n C-S-> swap-window -d -t "{next}"
bind -n C-S-t new-window -a -c "#{pane_current_path}"

# Layouts
bind -n C-S-f resize-pane -Z
bind -n C-S-l switch-client -T LAYOUT
bind -T LAYOUT f resize-pane -Z
bind -T LAYOUT v select-layout main-vertical
bind -T LAYOUT h select-layout main-horizontal
bind -T LAYOUT t select-layout tiled

# Sessions with tmux-sessionx

set -g @sessionx-x-path ''
set -g @sessionx-filter-current 'false'
set -g @sessionx-custom-paths ''
set -g @sessionx-preview-ratio '50%'
set -g @sessionx-preview-location 'bottom,border-top'
set -g @sessionx-window-height '90%'
set -g @sessionx-window-width '90%'
set -g @sessionx-prompt " "
set -g @sessionx-pointer "❯ "
set -g @sessionx-zoxide-mode 'on'
#set -g @sessionx-additional-options "${FZF_DEFAULT_OPTS}"
set -g @sessionx-legacy-fzf-support 'on' # remove labels

bind -T prefix s run-shell ~/.config/tmux/plugins/tmux-sessionx/scripts/sessionx.sh

run-shell ~/.config/tmux/plugins/tmux-sessionx/sessionx.tmux
